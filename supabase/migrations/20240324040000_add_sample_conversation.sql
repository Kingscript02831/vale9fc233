
-- Primeiro precisamos encontrar os IDs dos usu√°rios
DO $$
DECLARE
    vinixxx_id UUID;
    marcos_id UUID;
    chat_id UUID;
BEGIN
    -- Obter o ID do usu√°rio vinixxx
    SELECT id INTO vinixxx_id FROM auth.users WHERE email LIKE '%vinixxx%' OR raw_user_meta_data->>'username' = 'vinixxx' LIMIT 1;
    
    -- Obter o ID do usu√°rio marcos.38
    SELECT id INTO marcos_id FROM auth.users WHERE email LIKE '%marcos.38%' OR raw_user_meta_data->>'username' = 'marcos.38' LIMIT 1;
    
    -- Se ambos os usu√°rios existirem, criar a conversa
    IF vinixxx_id IS NOT NULL AND marcos_id IS NOT NULL THEN
        -- Criar o ID do chat combinando os IDs dos usu√°rios em ordem alfab√©tica
        SELECT CASE 
            WHEN vinixxx_id < marcos_id THEN vinixxx_id || '_' || marcos_id
            ELSE marcos_id || '_' || vinixxx_id
        END INTO chat_id;
        
        -- Verificar se o chat j√° existe
        IF NOT EXISTS (SELECT 1 FROM chats WHERE id = chat_id) THEN
            -- Criar a sala de chat
            INSERT INTO chats (id, created_at, updated_at)
            VALUES (chat_id, NOW(), NOW());
            
            -- Adicionar os participantes
            INSERT INTO chat_participants (chat_id, user_id, last_read_at, created_at)
            VALUES 
                (chat_id, vinixxx_id, NOW(), NOW()),
                (chat_id, marcos_id, NOW(), NOW());
            
            -- Adicionar algumas mensagens
            INSERT INTO messages (chat_id, sender_id, content, created_at, read)
            VALUES
                (chat_id, vinixxx_id, 'Ol√° Marcos, tudo bem?', NOW() - INTERVAL '1 hour', TRUE),
                (chat_id, marcos_id, 'Oi Vinixxx! Tudo √≥timo e com voc√™?', NOW() - INTERVAL '55 minutes', TRUE),
                (chat_id, vinixxx_id, 'Tudo bem tamb√©m! S√≥ queria saber se voc√™ vai no evento amanh√£.', NOW() - INTERVAL '50 minutes', TRUE),
                (chat_id, marcos_id, 'Sim, estou planejando ir! Que horas voc√™ vai?', NOW() - INTERVAL '45 minutes', TRUE),
                (chat_id, vinixxx_id, 'Estou pensando em ir por volta das 19h. Poder√≠amos nos encontrar l√°!', NOW() - INTERVAL '40 minutes', TRUE),
                (chat_id, marcos_id, 'Perfeito! 19h est√° √≥timo para mim. Onde podemos nos encontrar?', NOW() - INTERVAL '35 minutes', TRUE),
                (chat_id, vinixxx_id, 'Que tal na entrada principal? Assim fica mais f√°cil.', NOW() - INTERVAL '30 minutes', TRUE),
                (chat_id, marcos_id, 'Combinado! Te vejo amanh√£ √†s 19h na entrada principal.', NOW() - INTERVAL '25 minutes', TRUE),
                (chat_id, vinixxx_id, '√ìtimo! At√© amanh√£ ent√£o. üëç', NOW() - INTERVAL '20 minutes', TRUE),
                (chat_id, marcos_id, 'At√© amanh√£! üòÑ', NOW() - INTERVAL '15 minutes', FALSE);
                
            RAISE NOTICE 'Conversa criada com sucesso entre vinixxx e marcos.38!';
        ELSE
            RAISE NOTICE 'A conversa entre esses usu√°rios j√° existe!';
        END IF;
    ELSE
        RAISE NOTICE 'Um ou ambos os usu√°rios n√£o foram encontrados!';
        RAISE NOTICE 'vinixxx_id: %, marcos_id: %', vinixxx_id, marcos_id;
    END IF;
END $$;

-- Caso n√£o encontre os usu√°rios pelo email/username, este √© um fallback para cri√°-los manualmente
-- S√≥ executar√° se a l√≥gica acima n√£o encontrar os usu√°rios
DO $$
DECLARE
    vinixxx_id UUID := '00000000-0000-0000-0000-000000000001'; -- ID fict√≠cio para vinixxx
    marcos_id UUID := '00000000-0000-0000-0000-000000000002'; -- ID fict√≠cio para marcos.38
    chat_id UUID := vinixxx_id || '_' || marcos_id;
    user_count INTEGER;
BEGIN
    -- Verificar quantos usu√°rios foram encontrados na primeira tentativa
    SELECT COUNT(*) INTO user_count FROM auth.users 
    WHERE (email LIKE '%vinixxx%' OR raw_user_meta_data->>'username' = 'vinixxx') 
    OR (email LIKE '%marcos.38%' OR raw_user_meta_data->>'username' = 'marcos.38');
    
    -- Se nenhum usu√°rio foi encontrado, criar manualmente a conversa
    IF user_count < 2 THEN
        -- Verificar se o chat j√° existe
        IF NOT EXISTS (SELECT 1 FROM chats WHERE id = chat_id) THEN
            -- Criar a sala de chat
            INSERT INTO chats (id, created_at, updated_at)
            VALUES (chat_id, NOW(), NOW());
            
            -- Adicionar os participantes
            INSERT INTO chat_participants (chat_id, user_id, last_read_at, created_at)
            VALUES 
                (chat_id, vinixxx_id, NOW(), NOW()),
                (chat_id, marcos_id, NOW(), NOW());
            
            -- Adicionar algumas mensagens
            INSERT INTO messages (chat_id, sender_id, content, created_at, read)
            VALUES
                (chat_id, vinixxx_id, 'Ol√° Marcos, tudo bem?', NOW() - INTERVAL '1 hour', TRUE),
                (chat_id, marcos_id, 'Oi Vinixxx! Tudo √≥timo e com voc√™?', NOW() - INTERVAL '55 minutes', TRUE),
                (chat_id, vinixxx_id, 'Tudo bem tamb√©m! S√≥ queria saber se voc√™ vai no evento amanh√£.', NOW() - INTERVAL '50 minutes', TRUE),
                (chat_id, marcos_id, 'Sim, estou planejando ir! Que horas voc√™ vai?', NOW() - INTERVAL '45 minutes', TRUE),
                (chat_id, vinixxx_id, 'Estou pensando em ir por volta das 19h. Poder√≠amos nos encontrar l√°!', NOW() - INTERVAL '40 minutes', TRUE),
                (chat_id, marcos_id, 'Perfeito! 19h est√° √≥timo para mim. Onde podemos nos encontrar?', NOW() - INTERVAL '35 minutes', TRUE),
                (chat_id, vinixxx_id, 'Que tal na entrada principal? Assim fica mais f√°cil.', NOW() - INTERVAL '30 minutes', TRUE),
                (chat_id, marcos_id, 'Combinado! Te vejo amanh√£ √†s 19h na entrada principal.', NOW() - INTERVAL '25 minutes', TRUE),
                (chat_id, vinixxx_id, '√ìtimo! At√© amanh√£ ent√£o. üëç', NOW() - INTERVAL '20 minutes', TRUE),
                (chat_id, marcos_id, 'At√© amanh√£! üòÑ', NOW() - INTERVAL '15 minutes', FALSE);
                
            RAISE NOTICE 'Conversa criada manualmente com IDs fict√≠cios!';
        ELSE
            RAISE NOTICE 'A conversa j√° existe com os IDs fict√≠cios!';
        END IF;
    END IF;
END $$;
